#ifndef _MEAS_50_H // Блокируем повторное включение этого модуля
#define _MEAS_50_H
/*

Модуль предназначен для измерения переменного напряжения с частотой 50 Гц.
На входе АЦП нужно сделать среднюю точку в середине диапазона. Переменку подавать 
через разделительный конденсатор в эту среднюю точку.
Модуль измерения отделит постоянное смещение (hpf1), далее отфильтрует помехи (bpf2),
после чего выпрямит переменный ток и превратит его в пульсирующий. 
Далее пульсирующий ток с помощью ФНЧ 4 порядка сглаживается.

Фильтры рассчитаны для Fd=8кГц. Соответственно вызывать функцию измерения (брать сэмплы от АЦП)
нужно с частотой 8 кГц.

Перед вызовом while(1) вызвать функцию meas_50Hz_filter_init() для загрузки
коэффициентов фильтров в их контексты.

Выходной ФНЧ имеет порядо 4 и образован двумя последовательно включенными звеньями
второго порядка с собственными коэффициентами.

Время установления выходного сигнала - 1 секунда.



*/
//******************************************************************************
// Секция include: здесь подключаются заголовочные файлы используемых модулей
//******************************************************************************
#include <math.h>
#include <stdio.h>
#include "stm32f4xx_hal.h"
#include "cmsis_os.h"


//******************************************************************************
// Секция определения констант
//******************************************************************************

#define SCALE  4                                     // Для точного подгона выходного значения

    
//******************************************************************************
// Секция определения типов
//******************************************************************************
typedef struct {
  float S1;
  float A2;
  float Prev1;
  float Out;
}
HPF1_t;


typedef struct{
  float S1;
  float A2;
  float A3;
  float Prev1;
  float Prev2;
  float Out;
}
BPF2_t;


typedef struct{
  float S1;
  float A2;
  float A3;
  float B2;
  float Prev1;
  float Prev2;
  float Out;
}
LPF2_t;


typedef struct {
  HPF1_t Hpf1;
  BPF2_t Bpf2;
  LPF2_t Lpf2_1;
  LPF2_t Lpf2_2;
  float  Scale;
}
MEAS50_t;
//******************************************************************************
// Секция определения глобальных переменных
//******************************************************************************
//extern REG_t R; 


//******************************************************************************
// Секция прототипов глобальных функций
//******************************************************************************
void    meas_50Hz_filter_init   (MEAS50_t *Ch, float Scale);                    // Инициализация фильтров
float   meas_50Hz               (MEAS50_t *Ch, uint16_t In);                    // Измерение
float   lpf_2                   (LPF2_t *C, float In);
//******************************************************************************
// Секция определения макросов
//******************************************************************************
//#define MACRO1 ...
//#define MACRO2 ...
//#define ...
#endif // Закрывающий #endif к блокировке повторного включения
//******************************************************************************
// ENF OF FILE
//******************************************************************************